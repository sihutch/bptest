<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.test</groupId>
        <artifactId>bptest</artifactId>
        <version>1.0.70</version>
    </parent>

    <artifactId>bptest-alfresco</artifactId>
    <packaging>jar</packaging>

    <scm>
        <connection>scm:git:git@github.com:sihutch/bptest.git</connection>
        <developerConnection>scm:git:git@github.com:sihutch/bptest.git</developerConnection>
        <url>https://github.com/sihutch/bptest.git</url>
    </scm>

    <dependencies>
        <dependency>
            <groupId>com.ixxus.alfresco</groupId>
            <artifactId>ixxus-alfresco-sdk</artifactId>
            <version>4.2.0.0.0.1</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.ixxus.alfresco</groupId>
            <artifactId>alfresco-config</artifactId>
            <version>4.2.0.0.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.ixxus.test</groupId>
            <artifactId>test-utils</artifactId>
            <version>4.2.0.0.0.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>



    <profiles>
        
        <profile>
            <id>ci</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <version>2.1.9</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>

                        <configuration>
                            <!-- that's the default value, you don't have to set it -->
                            <prefix>git</prefix>

                            <!-- that's the default value -->
                            <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>

                            <!-- true is default here, it prints some more information during the build -->
                            <verbose>true</verbose>

                            <!-- If you'd like to tell the plugin where your .git directory is, use this setting, otherwise we'll perform a search trying to figure 
                                out the right directory. It's better to add it explicite IMHO. -->
                            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>

                            <!-- ALTERNATE SETUP - GENERATE FILE -->
                            <!-- If you want to keep git information, even in your WAR file etc, use this mode, which will generate a properties file (with filled 
                                out values) which you can then normally read using new Properties().load(/**/) -->

                            <!-- this is true by default; You may want to set this to false, if the plugin should run inside a <packaging>pom</packaging> project. 
                                Most projects won't need to override this property. For an use-case for this kind of behaviour see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21 -->
                            <skipPoms>true</skipPoms>

                            <!-- this is false by default, forces the plugin to generate the git.properties file -->
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>

                            <!-- The path for the to be generated properties file, it's relative to ${project.basedir} -->
                            <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>

                            <!-- true by default, controls whether the plugin will fail when no .git directory is found, when set to false the plugin will just skip 
                                execution -->
                            <!-- @since 2.0.4 -->
                            <failOnNoGitDirectory>false</failOnNoGitDirectory>

                            <!-- @since 2.1.8 -->
                            <!-- skip the plugin execution completely. This is useful for e.g. profile activated plugin invocations or to use properties to enable 
                                / disable pom features. Default value is 'false'. -->
                            <skip>false</skip>

                            <!-- @since 2.1.9 -->
                            <!-- Can be used to exclude certain properties from being emited into the resulting file. May be useful when you want to hide {@code 
                                git.remote.origin.url} (maybe because it contains your repo password?), or the email of the committer etc. Each value may be globbing, that is, you can write {@code 
                                git.commit.user.*} to exclude both, the {@code name}, as well as {@code email} properties from being emitted into the resulting files. Please note that the strings 
                                here are Java regexes ({@code .*} is globbing, not plain {@code *}). -->
                            <excludeProperties>
                                <!-- <excludeProperty>git.user.*</excludeProperty> -->
                            </excludeProperties>


                            <!-- @since 2.1.0 -->
                            <!-- read up about git-describe on the in man, or it's homepage - it's a really powerful versioning helper and the recommended way to 
                                use git-commit-id-plugin. The configuration bellow is optional, by default describe will run "just like git-describe on the command line", even though it's a JGit 
                                reimplementation. -->
                            <gitDescribe>

                                <!-- don't generate the describe property -->
                                <skip>false</skip>

                                <!-- if no tag was found "near" this commit, just print the commit's id instead, helpful when you always expect this field to be 
                                    not-empty -->
                                <always>false</always>
                                <!-- how many chars should be displayed as the commit object id? 7 is git's default, 0 has a special meaning (see end of this README.md), 
                                    and 40 is the maximum value here -->
                                <abbrev>7</abbrev>

                                <!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
                                <dirty>-dirty</dirty>

                                <!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag. The distance will always be 
                                    0 if you're "on" the tag. -->
                                <forceLongFormat>false</forceLongFormat>
                            </gitDescribe>
                        </configuration>

                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--Profile which should be triggered when integration tests are desired -->
        <profile>
            <id>it</id>

            <dependencies>

                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>1.3.166</version>
                    <scope>test</scope>
                </dependency>

                <!-- You may need to change the version of the h2-support component depending on the version of Alfresco you are using. Check the version matrix 
                    on https://github.com/skuro/alfresco-h2-support/wiki/H2-Database-support-for-Alfresco -->
                <dependency>
                    <groupId>tk.skuro.alfresco</groupId>
                    <artifactId>h2-support</artifactId>
                    <version>1.5</version>
                    <scope>test</scope>
                </dependency>

            </dependencies>

            <properties>
                <filter.file>${project.build.testOutputDirectory}/alfresco-global.properties</filter.file>
                <failsafe.test.includes>**/*IT.java</failsafe.test.includes>
            </properties>

            <build>
                <defaultGoal>verify</defaultGoal>
                <plugins>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0-alpha-2</version>
                        <executions>
                            <execution>
                                <id>load-env-properties</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${filter.file}</file>
                                    </files>
                                    <quiet>false</quiet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.beardedgeeks</groupId>
                        <artifactId>maven-merge-properties-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>merge-test-properties</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <merges>
                                        <merge>
                                            <targetFile>${filter.file}</targetFile>
                                            <propertiesFiles>
                                                <propertiesFile>src/test/config/env.default.properties</propertiesFile>
                                            </propertiesFiles>
                                        </merge>
                                    </merges>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.12.4</version>
                        <configuration>
                            <!-- DO not allow the argLine below to wrap as it causes problems -->
                            <argLine>-Xms512m -Xmx512m -XX:MaxPermSize=512m ${jacoco.agent.argLine},includes=com.*</argLine>
                            <includes>
                                <include>${failsafe.test.includes}</include>
                            </includes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify-test</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Drop test db before tests -->
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <executions>
                            <execution>
                                <id>clean-alf-test-data</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <failOnError>false</failOnError>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${dir.root}</directory>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
